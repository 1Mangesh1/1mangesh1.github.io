---
import Layout from '../layouts/Layout.astro';
---

<Layout 
  title="Memes - Mangesh's Blog" 
  description="Funny  memes to brighten your coding day"
>
  <div class="max-w-4xl mx-auto px-4 py-12">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-4 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
        Memes
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-400 mb-8">
        Because debugging is 90% of programming, and memes are 90% of debugging 😄
      </p>
      
      <!-- Controls -->
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <button
          id="load-memes-btn"
          class="bg-gradient-to-r from-blue-500 to-purple-500 text-white px-6 py-3 rounded-lg hover:from-blue-600 hover:to-purple-600 transition-all transform hover:scale-105 flex items-center gap-2"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
          </svg>
          Load Fresh Memes
        </button>
        
        <select 
          id="subreddit-select"
          class="bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-3 text-gray-900 dark:text-gray-100"
        >
          <option value="ProgrammerHumor">r/ProgrammerHumor</option>
          <option value="wholesomememes">r/wholesomememes</option>
          <option value="dankmemes">r/dankmemes</option>
          <option value="memes">r/memes</option>
          <option value="funny">r/funny</option>
        </select>
        
        <select 
          id="count-select"
          class="bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-3 text-gray-900 dark:text-gray-100"
        >
          <option value="5">5 memes</option>
          <option value="10" selected>10 memes</option>
          <option value="15">15 memes</option>
          <option value="25">25 memes</option>
        </select>
      </div>
    </div>

    <!-- Loading State -->
    <div id="loading" class="hidden text-center py-12">
      <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
      <p class="mt-4 text-gray-600 dark:text-gray-400">Loading hilarious memes...</p>
    </div>

    <!-- Memes Container -->
    <div id="memes-container" class="space-y-8">
      <!-- Memes will be loaded here -->
    </div>

    <!-- Error State -->
    <div id="error-state" class="hidden text-center py-12">
      <div class="text-6xl mb-4">😅</div>
      <h2 class="text-2xl font-bold mb-4 text-gray-900 dark:text-gray-100">Oops! Something went wrong</h2>
      <p class="text-gray-600 dark:text-gray-400 mb-6">
        Looks like the meme API is having a bad day. Try again later!
      </p>
      <button 
        id="retry-btn"
        class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"
      >
        Try Again
      </button>
    </div>

    <!-- Meme Stats -->
    <div id="meme-stats" class="hidden mt-12 grid md:grid-cols-3 gap-6">
      <div class="bg-gradient-to-br from-green-500 to-emerald-500 rounded-lg p-6 text-white text-center">
        <div class="text-3xl mb-2">📊</div>
        <div class="text-2xl font-bold" id="total-memes">0</div>
        <div class="text-sm opacity-90">Memes Loaded</div>
      </div>
      <div class="bg-gradient-to-br from-orange-500 to-red-500 rounded-lg p-6 text-white text-center">
        <div class="text-3xl mb-2">⬆️</div>
        <div class="text-2xl font-bold" id="total-upvotes">0</div>
        <div class="text-sm opacity-90">Total Upvotes</div>
      </div>
      <div class="bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg p-6 text-white text-center">
        <div class="text-3xl mb-2">👤</div>
        <div class="text-2xl font-bold" id="unique-authors">0</div>
        <div class="text-sm opacity-90">Unique Authors</div>
      </div>
    </div>

    <!-- Fun Facts -->
    <div class="mt-16 bg-gray-50 dark:bg-gray-800 rounded-lg p-8">
      <h2 class="text-2xl font-bold mb-6 text-center">🎯 Fun Programming Facts</h2>
      <div class="grid md:grid-cols-2 gap-6">
        <div class="text-center">
          <div class="text-4xl mb-3">🐛</div>
          <h3 class="font-bold mb-2">The First Bug</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400">
            The term "bug" was coined by Grace Hopper in 1947 when she found an actual moth stuck in a computer relay!
          </p>
        </div>
        <div class="text-center">
          <div class="text-4xl mb-3">☕</div>
          <h3 class="font-bold mb-2">Java Origins</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400">
            Java was originally called "Oak" but was renamed because of trademark issues. Thank goodness for coffee!
          </p>
        </div>
        <div class="text-center">
          <div class="text-4xl mb-3">🔢</div>
          <h3 class="font-bold mb-2">Array Indexing</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400">
            Arrays start at 0 because of pointer arithmetic. It's not just to confuse beginners... or is it? 🤔
          </p>
        </div>
        <div class="text-center">
          <div class="text-4xl mb-3">🎂</div>
          <h3 class="font-bold mb-2">Hello World</h3>
          <p class="text-sm text-gray-600 dark:text-gray-400">
            "Hello, World!" was first used in 1978 in "The C Programming Language" book. Still going strong!
          </p>
        </div>
      </div>
    </div>

    <!-- Back Navigation -->
    <div class="text-center mt-12">
      <a 
        href="/" 
        class="inline-flex items-center text-blue-600 dark:text-blue-400 hover:underline text-lg"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back to Home
      </a>
    </div>
  </div>
</Layout>

<script>
  // Meme API functionality
  const loadMemesBtn = document.getElementById('load-memes-btn');
  const subredditSelect = document.getElementById('subreddit-select') as HTMLSelectElement;
  const countSelect = document.getElementById('count-select') as HTMLSelectElement;
  const memesContainer = document.getElementById('memes-container');
  const loading = document.getElementById('loading');
  const errorState = document.getElementById('error-state');
  const retryBtn = document.getElementById('retry-btn');
  const memeStats = document.getElementById('meme-stats');

  let currentMemes: any[] = [];

  // Load memes function
  async function loadMemes() {
    if (!memesContainer || !loading || !errorState) return;

    const subreddit = subredditSelect?.value || 'ProgrammerHumor';
    const count = countSelect?.value || '10';

    // Show loading state
    loading.classList.remove('hidden');
    errorState.classList.add('hidden');
    memesContainer.innerHTML = '';
    memeStats?.classList.add('hidden');

    try {
      const response = await fetch(`https://meme-api.com/gimme/${subreddit}/${count}`);
      
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      currentMemes = data.memes || [];

      // Hide loading
      loading.classList.add('hidden');

      if (currentMemes.length === 0) {
        throw new Error('No memes found');
      }

      // Display memes
      displayMemes(currentMemes);
      updateStats(currentMemes);

    } catch (error) {
      console.error('Error loading memes:', error);
      loading.classList.add('hidden');
      errorState.classList.remove('hidden');
    }
  }

  // Display memes function
  function displayMemes(memes: any[]) {
    if (!memesContainer) return;

    memesContainer.innerHTML = '';

    memes.forEach((meme, index) => {
      const memeCard = document.createElement('div');
      memeCard.className = 'bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-shadow';
      
      memeCard.innerHTML = `
        <div class="p-6">
          <div class="flex items-start justify-between mb-4">
            <div>
              <h3 class="text-xl font-bold text-gray-900 dark:text-gray-100 mb-2">${meme.title}</h3>
              <div class="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400">
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  r/${meme.subreddit}
                </span>
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v5a1 1 0 00.293.707l3 3a1 1 0 001.414-1.414L11 10.586V5z" clip-rule="evenodd"></path>
                  </svg>
                  u/${meme.author}
                </span>
                <span class="flex items-center gap-1">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"></path>
                  </svg>
                  ${meme.ups.toLocaleString()} upvotes
                </span>
              </div>
            </div>
            <button 
              onclick="shareMeme('${meme.postLink}', '${meme.title.replace(/'/g, "\\'")}', ${index})"
              class="p-2 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
              title="Share meme"
            >
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
              </svg>
            </button>
          </div>
          
          <div class="mb-4">
            <img 
              src="${meme.url}" 
              alt="${meme.title}"
              class="w-full rounded-lg shadow-md hover:shadow-lg transition-shadow cursor-pointer"
              onclick="openImageModal('${meme.url}', '${meme.title.replace(/'/g, "\\'")}')"
              loading="lazy"
              onerror="this.parentElement.innerHTML='<div class=\\'bg-gray-100 dark:bg-gray-700 rounded-lg p-8 text-center\\'>🖼️<br>Image failed to load</div>'"
            />
          </div>
          
          <div class="flex items-center justify-between">
            <a 
              href="${meme.postLink}" 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-blue-600 dark:text-blue-400 hover:underline text-sm flex items-center gap-1"
            >
              View on Reddit
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
              </svg>
            </a>
            <div class="flex items-center gap-2">
              ${meme.spoiler ? '<span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded">Spoiler</span>' : ''}
              ${meme.nsfw ? '<span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded">NSFW</span>' : ''}
            </div>
          </div>
        </div>
      `;

      memesContainer.appendChild(memeCard);
      
      // Add stagger animation
      setTimeout(() => {
        memeCard.style.opacity = '0';
        memeCard.style.transform = 'translateY(20px)';
        memeCard.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
        
        setTimeout(() => {
          memeCard.style.opacity = '1';
          memeCard.style.transform = 'translateY(0)';
        }, index * 100);
      }, 50);
    });
  }

  // Update stats
  function updateStats(memes: any[]) {
    const totalMemes = document.getElementById('total-memes');
    const totalUpvotes = document.getElementById('total-upvotes');
    const uniqueAuthors = document.getElementById('unique-authors');

    if (totalMemes && totalUpvotes && uniqueAuthors) {
      const upvotes = memes.reduce((sum, meme) => sum + meme.ups, 0);
      const authors = new Set(memes.map(meme => meme.author));

      totalMemes.textContent = memes.length.toString();
      totalUpvotes.textContent = upvotes.toLocaleString();
      uniqueAuthors.textContent = authors.size.toString();

      memeStats?.classList.remove('hidden');
    }
  }

  // Share meme function
  (window as any).shareMeme = async (postLink: string, title: string, _index: number) => {
    try {
      if (navigator.share) {
        await navigator.share({
          title: title,
          url: postLink
        });
      } else {
        await navigator.clipboard.writeText(postLink);
        showToast('Link copied to clipboard!', 'success');
      }
    } catch (error) {
      console.error('Error sharing:', error);
      showToast('Failed to share', 'error');
    }
  };

  // Open image modal
  (window as any).openImageModal = (imageUrl: string, title: string) => {
    const modal = document.createElement('div');
    modal.className = 'fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4';
    modal.innerHTML = `
      <div class="relative max-w-4xl max-h-full">
        <button 
          onclick="this.parentElement.parentElement.remove()"
          class="absolute -top-10 right-0 text-white hover:text-gray-300 text-2xl"
        >
          ✕
        </button>
        <img src="${imageUrl}" alt="${title}" class="max-w-full max-h-full rounded-lg shadow-2xl" />
      </div>
    `;
    
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.remove();
      }
    });
    
    document.body.appendChild(modal);
  };

  // Toast notification
  function showToast(message: string, type: 'success' | 'error') {
    const toast = document.createElement('div');
    toast.className = `fixed bottom-4 right-4 px-6 py-3 rounded-lg text-white z-50 ${
      type === 'success' ? 'bg-green-600' : 'bg-red-600'
    }`;
    toast.textContent = message;
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.remove();
    }, 3000);
  }

  // Event listeners
  loadMemesBtn?.addEventListener('click', loadMemes);
  retryBtn?.addEventListener('click', loadMemes);

  // Load memes on page load
  loadMemes();

  console.log('🤣 Meme page loaded! Enjoy the programming humor!');
</script>

<style>
  /* Custom scrollbar for meme container */
  #memes-container::-webkit-scrollbar {
    width: 8px;
  }
  
  #memes-container::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
  }
  
  #memes-container::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 4px;
  }
  
  #memes-container::-webkit-scrollbar-thumb:hover {
    background: #555;
  }
</style> 