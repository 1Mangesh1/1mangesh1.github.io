---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Games - Mangesh" description="Simple games and interactive tools - Pixel Sandbox, ASCII Drawer, Hangman and more">
  <div class="max-w-6xl mx-auto px-4 py-12">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold mb-4 bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
        üéÆ Interactive Games
      </h1>
      <p class="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        Collection of interactive games and creative tools built with modern web technologies. Click on any game to start playing!
      </p>
    </div>

    <!-- Games Grid -->
    <div class="grid md:grid-cols-2 gap-8 mb-12">
      
      <!-- Pixel Sandbox / ASCII Drawer Card -->
      <div class="bg-gradient-to-br from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-xl border border-blue-200 dark:border-blue-800 overflow-hidden">
        <div class="p-6">
          <div class="flex items-center mb-4">
            <span class="text-3xl mr-3">üé®</span>
            <h2 class="text-2xl font-bold">Pixel Sandbox</h2>
          </div>
          <p class="text-gray-600 dark:text-gray-400 mb-4">
            Create pixel art or ASCII art in customizable grids. Save, share, and export your creations as JSON or PNG files.
          </p>
          
          <!-- Technologies -->
          <div class="mb-4">
            <h3 class="text-sm font-semibold mb-2 text-blue-900 dark:text-blue-100">Technologies:</h3>
            <div class="flex flex-wrap gap-2">
              <span class="px-2 py-1 bg-blue-600 text-white text-xs rounded-full">JavaScript ES6</span>
              <span class="px-2 py-1 bg-green-600 text-white text-xs rounded-full">Canvas API</span>
              <span class="px-2 py-1 bg-purple-600 text-white text-xs rounded-full">File API</span>
              <span class="px-2 py-1 bg-orange-600 text-white text-xs rounded-full">Local Storage</span>
            </div>
          </div>

          <!-- Features -->
          <div class="mb-6">
            <h3 class="text-sm font-semibold mb-2 text-blue-900 dark:text-blue-100">Features:</h3>
            <ul class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
              <li>‚Ä¢ Dual mode: Pixel Art & ASCII Art</li>
              <li>‚Ä¢ Multiple grid sizes (16x16 to 48x48)</li>
              <li>‚Ä¢ Export as PNG, JSON, or code snippets</li>
              <li>‚Ä¢ Save/load artwork files</li>
            </ul>
          </div>

          <button onclick="showGame('pixel-drawer')" class="w-full bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors font-medium">
            üé® Start Creating
          </button>
        </div>
      </div>

      <!-- Hangman Game Card -->
      <div class="bg-gradient-to-br from-green-50 to-teal-50 dark:from-green-900/20 dark:to-teal-900/20 rounded-xl border border-green-200 dark:border-green-800 overflow-hidden">
        <div class="p-6">
          <div class="flex items-center mb-4">
            <span class="text-3xl mr-3">üéØ</span>
            <h2 class="text-2xl font-bold">Hangman</h2>
          </div>
          <p class="text-gray-600 dark:text-gray-400 mb-4">
            Classic word guessing game with programming and technology themed words. Test your vocabulary and save your high scores!
          </p>
          
          <!-- Technologies -->
          <div class="mb-4">
            <h3 class="text-sm font-semibold mb-2 text-green-900 dark:text-green-100">Technologies:</h3>
            <div class="flex flex-wrap gap-2">
              <span class="px-2 py-1 bg-green-600 text-white text-xs rounded-full">JavaScript ES6</span>
              <span class="px-2 py-1 bg-blue-600 text-white text-xs rounded-full">Canvas 2D</span>
              <span class="px-2 py-1 bg-purple-600 text-white text-xs rounded-full">Web Audio API</span>
              <span class="px-2 py-1 bg-orange-600 text-white text-xs rounded-full">Local Storage</span>
            </div>
          </div>

          <!-- Features -->
          <div class="mb-6">
            <h3 class="text-sm font-semibold mb-2 text-green-900 dark:text-green-100">Features:</h3>
            <ul class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
              <li>‚Ä¢ 50+ programming-themed words</li>
              <li>‚Ä¢ Visual hangman drawing with Canvas</li>
              <li>‚Ä¢ Sound effects for game events</li>
              <li>‚Ä¢ Score tracking and hints</li>
            </ul>
          </div>

          <button onclick="showGame('hangman')" class="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors font-medium">
            üéØ Start Playing
          </button>
        </div>
      </div>

    </div>

    <!-- Game Container -->
    <div id="game-container" class="hidden">
      <div class="bg-white dark:bg-gray-800 rounded-xl p-8 border border-gray-200 dark:border-gray-700">
        <div class="flex justify-between items-center mb-6">
          <h2 id="game-title" class="text-2xl font-bold"></h2>
          <button onclick="hideGame()" class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors">
            ‚Üê Back to Games
          </button>
        </div>
        
        <!-- Pixel Drawer Game -->
        <div id="pixel-drawer-game" class="game-content hidden"></div>
        
        <!-- Hangman Game -->
        <div id="hangman-game" class="game-content hidden"></div>
      </div>
    </div>

    <!-- More Games Section (Placeholder) -->
    <section class="text-center">
      <div class="bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 rounded-lg p-8 border border-yellow-200 dark:border-yellow-800">
        <h2 class="text-2xl font-bold mb-4">üöß More Games Coming Soon!</h2>
        <p class="text-gray-600 dark:text-gray-400 mb-4">
          I'm working on adding more interactive games and tools. Stay tuned for:
        </p>
        <div class="grid md:grid-cols-3 gap-4 mt-6">
          <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
            <div class="text-2xl mb-2">üêç</div>
            <h3 class="font-semibold">Snake Game</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">Classic snake game with modern twist</p>
          </div>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
            <div class="text-2xl mb-2">üß©</div>
            <h3 class="font-semibold">Memory Game</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">Test your memory with patterns</p>
          </div>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
            <div class="text-2xl mb-2">üßÆ</div>
            <h3 class="font-semibold">Wack a bug</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400">Wack a programming bug with a hammer</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Hidden elements for functionality -->
    <input type="file" id="json-file-input" accept=".json" style="display: none;">
    <canvas id="download-canvas" style="display: none;"></canvas>
  </div>

  <script>
    // Game management functions
    let currentGame: any = null;

    // Extend window interface for global functions
    declare global {
      interface Window {
        showGame: (gameType: string) => void;
        hideGame: () => void;
        PixelDrawer: any;
        HangmanGame: any;
      }
    }

    function showGame(gameType: string): void {
      const gameContainer = document.getElementById('game-container');
      const gameTitle = document.getElementById('game-title');
      
      if (!gameContainer || !gameTitle) return;
      
      // Hide all game content
      document.querySelectorAll('.game-content').forEach(content => {
        content.classList.add('hidden');
      });
      
      if (gameType === 'pixel-drawer') {
        gameTitle.textContent = 'üé® Pixel Sandbox / ASCII Drawer';
        const gameContent = document.getElementById('pixel-drawer-game');
        if (!gameContent) return;
        
        gameContent.innerHTML = `
          <!-- Game Controls -->
          <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-6 mb-6">
            <div class="grid md:grid-cols-4 gap-4 mb-6">
              <div>
                <label for="grid-size" class="block text-sm font-medium mb-2">Grid Size</label>
                <select id="grid-size" class="w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100">
                  <option value="16">16x16</option>
                  <option value="24">24x24</option>
                  <option value="32" selected>32x32</option>
                  <option value="48">48x48</option>
                </select>
              </div>
              
              <div>
                <label for="drawing-mode" class="block text-sm font-medium mb-2">Mode</label>
                <select id="drawing-mode" class="w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100">
                  <option value="pixel">Pixel Art</option>
                  <option value="ascii">ASCII Art</option>
                </select>
              </div>

              <div id="color-picker-container">
                <label for="color-picker" class="block text-sm font-medium mb-2">Color</label>
                <input type="color" id="color-picker" value="#3b82f6" class="w-full h-10 border border-gray-300 dark:border-gray-600 rounded-md">
              </div>

              <div id="char-picker-container" class="hidden">
                <label for="char-picker" class="block text-sm font-medium mb-2">Character</label>
                <select id="char-picker" class="w-full p-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100">
                  <option value="‚ñà">‚ñà (Block)</option>
                  <option value="‚ñì">‚ñì (Dark Shade)</option>
                  <option value="‚ñí">‚ñí (Medium Shade)</option>
                  <option value="‚ñë">‚ñë (Light Shade)</option>
                  <option value="*">* (Asterisk)</option>
                  <option value="#"># (Hash)</option>
                  <option value="@">@ (At)</option>
                  <option value="+">+ (Plus)</option>
                  <option value="-">- (Dash)</option>
                  <option value=".">. (Dot)</option>
                  <option value=" ">  (Space)</option>
                </select>
              </div>
            </div>

            <div class="flex flex-wrap gap-3">
              <button id="clear-btn" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
                Clear Grid
              </button>
              <button id="save-json-btn" class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors">
                Save as JSON
              </button>
              <button id="load-json-btn" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                Load JSON
              </button>
              <button id="export-code-btn" class="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition-colors">
                Export Code
              </button>
              <button id="download-image-btn" class="px-4 py-2 bg-orange-600 text-white rounded-md hover:bg-orange-700 transition-colors">
                Download PNG
              </button>
            </div>
          </div>

          <!-- Drawing Canvas -->
          <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-6 mb-6">
            <div class="flex justify-center">
              <div id="drawing-grid" class="inline-block border-2 border-gray-400 dark:border-gray-600 bg-white dark:bg-gray-900">
                <!-- Grid will be generated here -->
              </div>
            </div>
          </div>

          <!-- ASCII Output -->
          <div id="ascii-output-container" class="hidden bg-gray-50 dark:bg-gray-700 rounded-lg p-6">
            <h3 class="text-lg font-semibold mb-4">ASCII Output</h3>
            <pre id="ascii-output" class="font-mono text-sm bg-white dark:bg-gray-900 p-4 rounded border overflow-auto max-h-64"></pre>
            <button id="copy-ascii-btn" class="mt-4 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors">
              Copy ASCII
            </button>
          </div>
        `;
        gameContent.classList.remove('hidden');
        
        // Load and initialize pixel drawer
        loadScript('/game-scripts/pixel-drawer.js', () => {
          if (window.PixelDrawer) {
            currentGame = new window.PixelDrawer();
          }
        });
        
      } else if (gameType === 'hangman') {
        gameTitle.textContent = 'üéØ Hangman Game';
        const gameContent = document.getElementById('hangman-game');
        if (!gameContent) return;
        
        gameContent.innerHTML = `
          <!-- Game Stats -->
          <div class="grid md:grid-cols-3 gap-4 mb-6">
            <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 text-center">
              <div class="text-2xl font-bold" id="score">Wins: 0 | Losses: 0</div>
              <div class="text-sm text-gray-600 dark:text-gray-400">Score</div>
            </div>
            <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 text-center">
              <div class="text-2xl font-bold" id="wrong-guesses">0/6</div>
              <div class="text-sm text-gray-600 dark:text-gray-400">Wrong Guesses</div>
            </div>
            <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 text-center">
              <div class="text-sm" id="guessed-letters">None</div>
              <div class="text-sm text-gray-600 dark:text-gray-400">Guessed Letters</div>
            </div>
          </div>

          <!-- Game Status -->
          <div class="text-center mb-6">
            <div id="game-status" class="text-lg mb-4">üéØ Guess the word letter by letter!</div>
            <div id="word-display" class="text-4xl font-mono font-bold tracking-widest mb-6">_ _ _ _ _</div>
          </div>

          <!-- Game Area -->
          <div class="grid md:grid-cols-2 gap-8">
            <!-- Hangman Drawing -->
            <div class="flex justify-center">
              <canvas id="hangman-canvas" width="250" height="250" class="border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-900"></canvas>
            </div>

            <!-- Keyboard -->
            <div>
              <h3 class="text-lg font-semibold mb-4">Click letters to guess:</h3>
              <div id="keyboard" class="flex flex-wrap justify-center gap-1 mb-6">
                <!-- Keyboard will be generated here -->
              </div>

              <!-- Game Controls -->
              <div class="flex flex-wrap gap-3">
                <button id="new-game-btn" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                  üéÆ New Game
                </button>
                <button id="hint-btn" class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors">
                  üí° Hint
                </button>
                <button id="reset-score-btn" class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors">
                  üîÑ Reset Score
                </button>
              </div>
            </div>
          </div>

          <!-- Instructions -->
          <div class="mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
            <h3 class="font-semibold mb-2">How to Play:</h3>
            <ul class="text-sm text-gray-600 dark:text-gray-400 space-y-1">
              <li>‚Ä¢ Guess letters by clicking the buttons or using your keyboard</li>
              <li>‚Ä¢ You have 6 wrong guesses before the game ends</li>
              <li>‚Ä¢ Words are programming and technology related</li>
              <li>‚Ä¢ Use the hint button if you're stuck (reveals a random letter)</li>
            </ul>
          </div>
        `;
        gameContent.classList.remove('hidden');
        
        // Load and initialize hangman
        loadScript('/game-scripts/hangman.js', () => {
          if (window.HangmanGame) {
            // Add a slight delay to ensure DOM is fully ready
            setTimeout(() => {
              currentGame = new window.HangmanGame();
            }, 100);
          }
        });
      }
      
      gameContainer.classList.remove('hidden');
      gameContainer.scrollIntoView({ behavior: 'smooth' });
    }

    function hideGame(): void {
      const gameContainer = document.getElementById('game-container');
      if (!gameContainer) return;
      
      gameContainer.classList.add('hidden');
      currentGame = null;
    }

    function loadScript(src: string, callback: () => void): void {
      const script = document.createElement('script');
      script.src = src;
      script.onload = callback;
      script.onerror = () => console.error(`Failed to load script: ${src}`);
      document.head.appendChild(script);
    }

    // Make functions globally available
    window.showGame = showGame;
    window.hideGame = hideGame;
  </script>
</Layout> 