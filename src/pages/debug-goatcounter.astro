---
import Layout from '../layouts/Layout.astro';
import PageViews from '../components/PageViews.astro';
import PageViewsDirect from '../components/PageViewsDirect.astro';
---

<Layout 
  title="GoatCounter Debug Page" 
  description="Debugging GoatCounter visitor counter implementation"
  noindex={true}
>
  <div class="max-w-4xl mx-auto px-4 py-12">
    <h1 class="text-4xl font-bold mb-6">GoatCounter Debug Page</h1>
    
    <div class="grid gap-6 md:grid-cols-2">
      <!-- JavaScript API Implementation -->
      <div class="bg-gray-50 dark:bg-gray-800 p-6 rounded-lg">
        <h2 class="text-2xl font-semibold mb-4">JavaScript API Test</h2>
        <p class="text-gray-600 dark:text-gray-400 mb-4">
          Using window.goatcounter.visit_count() API
        </p>
        
        <div class="flex items-center text-sm text-gray-600 dark:text-gray-400 mb-4">
          <span>Page Views:</span>
          <PageViews />
        </div>
        
        <div class="text-xs text-gray-500 dark:text-gray-500">
          <p>Check browser console for detailed logs</p>
        </div>
      </div>

      <!-- Direct URL Implementation -->
      <div class="bg-gray-50 dark:bg-gray-800 p-6 rounded-lg">
        <h2 class="text-2xl font-semibold mb-4">Direct URL Test</h2>
        <p class="text-gray-600 dark:text-gray-400 mb-4">
          Using iframe with direct GoatCounter URL
        </p>
        
        <div class="flex items-center text-sm text-gray-600 dark:text-gray-400 mb-4">
          <span>Page Views:</span>
          <PageViewsDirect />
        </div>
        
        <div class="text-xs text-gray-500 dark:text-gray-500">
          <p>Alternative implementation if JavaScript fails</p>
        </div>
      </div>
    </div>

    <!-- Debug Information -->
    <div class="mt-8 bg-blue-50 dark:bg-blue-900 p-6 rounded-lg">
      <h3 class="text-lg font-semibold mb-4">Debug Information</h3>
      
      <div class="space-y-2 text-sm">
        <div>
          <strong>Current Path:</strong> 
          <span id="current-path" class="font-mono">Loading...</span>
        </div>
        
        <div>
          <strong>GoatCounter Script:</strong> 
          <span id="script-status" class="font-mono">Checking...</span>
        </div>
        
        <div>
          <strong>GoatCounter API:</strong> 
          <span id="api-status" class="font-mono">Checking...</span>
        </div>
        
        <div>
          <strong>Network Status:</strong> 
          <span id="network-status" class="font-mono">Checking...</span>
        </div>
      </div>
    </div>

    <!-- Manual Test Buttons -->
    <div class="mt-8 bg-green-50 dark:bg-green-900 p-6 rounded-lg">
      <h3 class="text-lg font-semibold mb-4">Manual Tests</h3>
      
      <div class="space-y-4">
        <button 
          id="test-goatcounter-api" 
          class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors"
        >
          Test GoatCounter API
        </button>
        
        <button 
          id="test-direct-url" 
          class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors ml-2"
        >
          Test Direct URL
        </button>
        
        <button 
          id="clear-console" 
          class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700 transition-colors ml-2"
        >
          Clear Console
        </button>
      </div>
      
      <div id="test-results" class="mt-4 p-4 bg-white dark:bg-gray-800 rounded border hidden">
        <h4 class="font-semibold mb-2">Test Results:</h4>
        <pre id="results-content" class="text-xs overflow-auto"></pre>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Type declaration for GoatCounter
  declare global {
    interface Window {
      goatcounter?: {
        visit_count?: (options: any) => void;
      };
    }
  }

  // Debug information
  document.addEventListener('DOMContentLoaded', function() {
    // Update current path
    const currentPath = document.getElementById('current-path');
    if (currentPath) {
      currentPath.textContent = window.location.pathname;
    }
    
    // Check GoatCounter script status
    const scriptStatus = document.getElementById('script-status');
    if (scriptStatus) {
      if (typeof window.goatcounter !== 'undefined') {
        scriptStatus.textContent = '✅ Loaded';
        scriptStatus.className = 'font-mono text-green-600';
      } else {
        scriptStatus.textContent = '❌ Not loaded';
        scriptStatus.className = 'font-mono text-red-600';
      }
    }
    
    // Check GoatCounter API status
    const apiStatus = document.getElementById('api-status');
    if (apiStatus) {
      if (typeof window.goatcounter !== 'undefined' && typeof window.goatcounter.visit_count === 'function') {
        apiStatus.textContent = '✅ Available';
        apiStatus.className = 'font-mono text-green-600';
      } else {
        apiStatus.textContent = '❌ Not available';
        apiStatus.className = 'font-mono text-red-600';
      }
    }
    
    // Test network connectivity
    fetch('https://mangeshbide.goatcounter.com/count')
      .then(response => {
        const networkStatus = document.getElementById('network-status');
        if (networkStatus) {
          if (response.ok) {
            networkStatus.textContent = '✅ Connected';
            networkStatus.className = 'font-mono text-green-600';
          } else {
            networkStatus.textContent = `❌ HTTP ${response.status}`;
            networkStatus.className = 'font-mono text-red-600';
          }
        }
      })
      .catch(error => {
        const networkStatus = document.getElementById('network-status');
        if (networkStatus) {
          networkStatus.textContent = '❌ Network error';
          networkStatus.className = 'font-mono text-red-600';
        }
        console.error('Network test failed:', error);
      });
  });
  
  // Manual test functions
  document.getElementById('test-goatcounter-api')?.addEventListener('click', function() {
    const results = document.getElementById('test-results');
    const content = document.getElementById('results-content');
    
    if (!results || !content) return;
    
    try {
      if (typeof window.goatcounter === 'undefined') {
        content.textContent = '❌ GoatCounter not loaded';
        results.classList.remove('hidden');
        return;
      }
      
      if (typeof window.goatcounter.visit_count !== 'function') {
        content.textContent = '❌ visit_count function not available';
        results.classList.remove('hidden');
        return;
      }
      
      // Test the API
      window.goatcounter.visit_count!({
        append: "#test-results",
        no_branding: true,
        type: "html"
      });
      
      content.textContent = '✅ API test successful - check for visitor count above';
      results.classList.remove('hidden');
      
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error';
      content.textContent = `❌ API test failed: ${errorMessage}`;
      results.classList.remove('hidden');
    }
  });
  
  document.getElementById('test-direct-url')?.addEventListener('click', function() {
    const results = document.getElementById('test-results');
    const content = document.getElementById('results-content');
    
    if (!results || !content) return;
    
    const testUrl = 'https://mangeshbide.goatcounter.com/counter//.json';
    
    fetch(testUrl)
      .then(response => response.json())
      .then(data => {
        content.textContent = `✅ Direct URL test successful\nResponse: ${JSON.stringify(data, null, 2)}`;
        results.classList.remove('hidden');
      })
      .catch(error => {
        const errorMessage = error instanceof Error ? error.message : 'Unknown error';
        content.textContent = `❌ Direct URL test failed: ${errorMessage}`;
        results.classList.remove('hidden');
      });
  });
  
  document.getElementById('clear-console')?.addEventListener('click', function() {
    console.clear();
    const results = document.getElementById('test-results');
    const content = document.getElementById('results-content');
    
    if (results && content) {
      content.textContent = '✅ Console cleared';
      results.classList.remove('hidden');
    }
  });
</script> 